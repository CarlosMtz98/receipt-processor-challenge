// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/receipt/service/receipt_service.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	models "receipt-processor-challenge/internal/domain/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockReceiptService is a mock of ReceiptService interface.
type MockReceiptService struct {
	ctrl     *gomock.Controller
	recorder *MockReceiptServiceMockRecorder
}

// MockReceiptServiceMockRecorder is the mock recorder for MockReceiptService.
type MockReceiptServiceMockRecorder struct {
	mock *MockReceiptService
}

// NewMockReceiptService creates a new mock instance.
func NewMockReceiptService(ctrl *gomock.Controller) *MockReceiptService {
	mock := &MockReceiptService{ctrl: ctrl}
	mock.recorder = &MockReceiptServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReceiptService) EXPECT() *MockReceiptServiceMockRecorder {
	return m.recorder
}

// CreateReceipt mocks base method.
func (m *MockReceiptService) CreateReceipt(ctx context.Context, receipt *models.Receipt) (*models.Receipt, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateReceipt", ctx, receipt)
	ret0, _ := ret[0].(*models.Receipt)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateReceipt indicates an expected call of CreateReceipt.
func (mr *MockReceiptServiceMockRecorder) CreateReceipt(ctx, receipt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateReceipt", reflect.TypeOf((*MockReceiptService)(nil).CreateReceipt), ctx, receipt)
}

// GetReceiptByID mocks base method.
func (m *MockReceiptService) GetReceiptByID(ctx context.Context, receiptID uuid.UUID) (*models.Receipt, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReceiptByID", ctx, receiptID)
	ret0, _ := ret[0].(*models.Receipt)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetReceiptByID indicates an expected call of GetReceiptByID.
func (mr *MockReceiptServiceMockRecorder) GetReceiptByID(ctx, receiptID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReceiptByID", reflect.TypeOf((*MockReceiptService)(nil).GetReceiptByID), ctx, receiptID)
}

// GetReceiptPoints mocks base method.
func (m *MockReceiptService) GetReceiptPoints(ctx context.Context, receipt *models.Receipt) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReceiptPoints", ctx, receipt)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetReceiptPoints indicates an expected call of GetReceiptPoints.
func (mr *MockReceiptServiceMockRecorder) GetReceiptPoints(ctx, receipt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReceiptPoints", reflect.TypeOf((*MockReceiptService)(nil).GetReceiptPoints), ctx, receipt)
}
